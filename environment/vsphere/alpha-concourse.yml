---
name: alpha-concourse

meta:
  atc_db_name: atc
  atc_db_role:
    name: atc
    password: ATCPASSWORD
  atc_basic_auth:
    username: concourse
    password: CONPASSWORD
  director_uuid: DIRECTORUUID
  external_host: ci.example.com
  haproxy:
    ssl_pem: |
      -----BEGIN RSA PRIVATE KEY-----
      {{private-key}}
      -----END RSA PRIVATE KEY-----
      -----BEGIN CERTIFICATE-----
      {{certificate}}
      -----END CERTIFICATE-----
  message_bus_servers:
    - host: 13.13.13.130:4222
      user: NATSUSER
      password: NATSPASSWORD
  stemcell:
    name: bosh-vsphere-esxi-ubuntu-trusty-go_agent
    version: latest
  datacenters:
  - clusters:
    - CLUSTERNAME:
        resource_pool: RESOURCEPOOLNAME

director_uuid: (( grab meta.director_uuid ))

networks:
  - name: concourse
    type: manual
    subnets:
      - range: 11.11.11.0/20
        gateway: 11.11.11.1
        dns:
        - 12.12.12.1
        - 12.12.12.2
        reserved:
        - 11.11.11.2 - 11.11.11.49
        - 11.11.11.60 - 11.11.11.254
        static:
        - 11.11.11.50 - 11.11.11.54
        cloud_properties:
          name: CLOUDPROPERTIESNAME
        ## For reference, this leaves the following range for ephemeral IPs:
        ## - 11.11.11.55 - 11.11.11.59

releases:
  - name: concourse
    version: latest
  - name: garden-linux
    version: latest
  - name: route-registrar
    version: latest
  - name: cf-haproxy
    version: latest

jobs:
  - name: haproxy
    instances: 1
    resource_pool: haproxy
    networks: [{name: concourse, static_ips: (( static_ips(1) ))}]
    templates:
      - release: cf-haproxy
        name: haproxy
    properties:
      ha_proxy:
        backend_port: 8080
        backend_servers: (( grab jobs.web.networks.[0].static_ips ))
        ssl_pem: (( grab meta.haproxy.ssl_pem ))

  - name: discovery
    instances: 1
    resource_pool: discovery
    persistent_disk: 1024
    templates:
      - {release: concourse, name: consul-agent}
    networks:
      - name: concourse
        static_ips: (( static_ips(0) ))
    properties:
      route_registrar:
        external_host: (( grab meta.external_host ))
        external_ip: (( grab jobs.haproxy.networks.[0].static_ips.[0] ))
        port: 8080
        health_checker:
          name: concourse
        message_bus_servers: (( grab meta.message_bus_servers ))
      consul:
        agent:
          mode: server

  - name: web
    instances: 1
    resource_pool: web
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: tsa}
      - {release: concourse, name: atc}
    networks: [{name: concourse, static_ips: (( static_ips(3) ))}]
    properties:
      atc:
        web_listen_port: 8080
        publicly_viewable: true
        basic_auth_username: (( grab meta.atc_basic_auth.username ))
        basic_auth_password: (( grab meta.atc_basic_auth.password ))
        postgresql:
          database: (( grab meta.atc_db_name ))
          role: (( grab meta.atc_db_role ))

      tsa:
        atc:
          username: (( grab meta.atc_basic_auth.username ))
          password: (( grab meta.atc_basic_auth.password ))

      consul:
        agent:
          servers:
            lan: (( grab jobs.discovery.networks.[0].static_ips ))

  - name: db
    instances: 1
    resource_pool: databases
    persistent_disk: 10240
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: postgresql}
    networks: [{name: concourse , static_ips: (( static_ips(2) ))}]
    properties:
      postgresql:
        databases: [{name: (( grab meta.atc_db_name))}]
        roles: [(( grab meta.atc_db_role))]

      consul:
        agent:
          servers:
            lan: (( grab jobs.discovery.networks.[0].static_ips ))

  - name: worker
    instances: 3
    resource_pool: workers
    templates:
      - {release: concourse, name: consul-agent}
      - {release: concourse, name: groundcrew}
      - {release: garden-linux, name: garden}
    networks: [{name: concourse}]
    properties:
      garden:
        listen_network: tcp
        listen_address: 0.0.0.0:7777

      consul:
        agent:
          servers:
            lan: (( grab jobs.discovery.networks.[0].static_ips ))

      groundcrew:
        resource_types:
        - type: archive
          image: /var/vcap/packages/archive_resource
        - type: cf
          image: /var/vcap/packages/cf_resource
        - type: docker-image
          image: /var/vcap/packages/docker_image_resource
        - type: git
          image: /var/vcap/packages/git_resource
        - type: s3
          image: /var/vcap/packages/s3_resource
        - type: semver
          image: /var/vcap/packages/semver_resource
        - type: time
          image: /var/vcap/packages/time_resource
        - type: tracker
          image: /var/vcap/packages/tracker_resource
        - type: pool
          image: /var/vcap/packages/pool_resource
        - type: vagrant-cloud
          image: /var/vcap/packages/vagrant_cloud_resource
        - type: github-release
          image: /var/vcap/packages/github_release_resource
        - type: bosh-io-release
          image: docker:///concourse/bosh-io-release-resource
        - type: bosh-io-stemcell
          image: docker:///concourse/bosh-io-stemcell-resource
        - type: bosh-deployment
          image: /var/vcap/packages/bosh_deployment_resource
#        Optional:
#        - type: slack-notification
#          image: docker:///cfcommunity/slack-notification-resource

resource_pools:
  - name: web
    network: concourse
    stemcell: (( grab meta.stemcell ))
    cloud_properties:
      cpu: 1
      ram: 3_840
      disk: 4_096
      datacenters: (( grab meta.datacenters ))

  - name: discovery
    network: concourse
    stemcell: (( grab meta.stemcell ))
    cloud_properties:
      cpu: 1
      ram: 3_840
      disk: 4_096
      datacenters: (( grab meta.datacenters ))

  - name: databases
    network: concourse
    stemcell: (( grab meta.stemcell ))
    cloud_properties:
      cpu: 1
      ram: 3_840
      disk: 4_096
      datacenters: (( grab meta.datacenters ))

  - name: workers
    network: concourse
    stemcell: (( grab meta.stemcell ))
    cloud_properties:
      cpu: 2
      ram: 7_680
      disk: 512_000
      datacenters: (( grab meta.datacenters ))

  - name: haproxy
    network: concourse
    stemcell: (( grab meta.stemcell ))
    cloud_properties:
      cpu: 2
      ram: 7_680
      disk: 32_768
      datacenters: (( grab meta.datacenters ))

compilation:
  workers: 3
  network: concourse
  reuse_compilation_vms: true
  cloud_properties:
    cpu: 2
    ram: 3_840
    disk: 8_096
    datacenters: (( grab meta.datacenters ))

update:
  canaries: 1
  max_in_flight: 1
  serial: false
  canary_watch_time: 1000-60000
  update_watch_time: 1000-60000
